package com.lykke.matching.engine.messages;

option java_package = "com.lykke.matching.engine.messages";
option java_outer_classname = "ProtocolMessages";

message Response {
    required int64 uid = 1;
    optional string bussinesId = 2;
    optional string recordId = 3;
}

message NewResponse {
    required string id = 1;
    optional string matchingEngineId = 2;
    required int32 status = 3;
    optional string statusReason = 4;
}

message MarketOrderResponse {
    required string id = 1;
    required int32 status = 2;
    optional string statusReason = 3;
    optional double price = 4;
}

message CashOperation {
    required int64 uid = 1;
    required string clientId = 2;
    required int64 timestamp = 3;
    required string assetId = 4;
    required double amount = 5;
    required string bussinesId = 6;
    required bool sendToBitcoin = 7;
}

message CashInOutOperation {
    required string id = 1;
    required string clientId = 2;
    required int64 timestamp = 3;
    required string assetId = 4;
    required double volume = 5;
}

message CashTransferOperation {
    required string id = 1;
    required string fromClientId = 2;
    required string toClientId = 3;
    required int64 timestamp = 4;
    required string assetId = 5;
    required double volume = 6;
}

message CashSwapOperation {
    required string id = 1;
    required string clientId1 = 2;
    required string assetId1 = 3;
    required double volume1 = 4;
    required string clientId2 = 5;
    required string assetId2 = 6;
    required double volume2 = 7;
    required int64 timestamp = 8;
}

message OldLimitOrder {
    required int64 uid = 1;
    required int64 timestamp = 2;
    required string clientId = 3;
    required string assetPairId = 4;
    required double volume = 5;
    required double price = 6;
    optional bool cancelAllPreviousLimitOrders = 7;
}

message LimitOrder {
    required string uid = 1;
    required int64 timestamp = 2;
    required string clientId = 3;
    required string assetPairId = 4;
    required double volume = 5;
    required double price = 6;
    optional bool cancelAllPreviousLimitOrders = 7;
}

message OldMarketOrder {
    required int64 uid = 1;
    required int64 timestamp = 2;
    required string clientId = 3;
    required string assetPairId = 4;
    required double volume = 5;
    required bool straight = 6;
    optional double reservedLimitVolume = 7;
}

message MarketOrder {
    required string uid = 1;
    required int64 timestamp = 2;
    required string clientId = 3;
    required string assetPairId = 4;
    required double volume = 5;
    required bool straight = 6;
    optional double reservedLimitVolume = 7;
}

message LimitOrderCancel {
    required string uid = 1;
    required string limitOrderId = 2;
}

message MultiLimitOrderCancel {
    required string uid = 1;
    required int64 timestamp = 2;
    required string clientId = 3;
    required string assetPairId = 4;
    required bool isBuy = 5;
}

message OldLimitOrderCancel {
    required int64 uid = 1;
    required int64 limitOrderId = 2;
}

message BalanceUpdate {
    required string uid = 1;
    required string clientId = 2;
    required string assetId = 3;
    required double amount = 4;
}

message OldBalanceUpdate {
    required int64 uid = 1;
    required string clientId = 2;
    required string assetId = 3;
    required double amount = 4;
}

message OldMultiLimitOrder {
    required int64 uid = 1;
    required int64 timestamp = 2;
    required string clientId = 3;
    required string assetPairId = 4;

    message Order {
        required double volume = 1;
        required double price = 2;
    }

    repeated Order orders = 5;

    optional bool cancelAllPreviousLimitOrders = 6;
}

message MultiLimitOrder {
    required string uid = 1;
    required int64 timestamp = 2;
    required string clientId = 3;
    required string assetPairId = 4;

    message Order {
        required string uid = 1;
        required double volume = 2;
        required double price = 3;
    }

    repeated Order orders = 5;
    optional bool cancelAllPreviousLimitOrders = 6;
}

message WalletCredentialsReload {
    required int64 uid = 1;
    optional string clientId = 2;
}

message SubscribeToBalanceUpdate {
}

message BalanceNotification {
    required string clientId = 1;
}

message SubscribeToQuotesUpdate {
}

message QuotesUpdate {
    required string assetId = 1;
    required double price = 2;
    required double volume = 3;
}

message OrderBookSnapshot {
    required string asset = 1;
    required bool isBuy = 2;
    required int64 timestamp = 3;

    message OrderBookLevel {
        required string price = 1;
        required string volume = 2;
    }

    repeated OrderBookLevel levels = 4;
}

message ReservedBalanceUpdate {
    required string uid = 1;
    required string clientId = 2;
    required string assetId = 3;
    required double reservedAmount = 4;
}

message ReservedCashInOutOperation {
    required string id = 1;
    required string clientId = 2;
    required int64 timestamp = 3;
    required string assetId = 4;
    required double reservedVolume = 5;
}