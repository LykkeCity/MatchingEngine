group 'com.lykke.me'
version '0.1'

buildscript {
    ext.spring_boot_version = '2.0.0.RELEASE'
    ext.kotlin_version =  '1.2.10'

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.1'
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$spring_boot_version"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlin_version"
    }
}

apply plugin: "idea"
apply plugin: "kotlin"
apply plugin: "kotlin-spring"
apply plugin: "application"
apply plugin: "com.google.protobuf"
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

compileKotlin.dependsOn ':generateProto'

repositories {
    mavenCentral()
    maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
}

ext {
    kotlin_utils_version = '0.0.8-SNAPSHOT'
    log4j_version = '1.2.17'
    protobuf_version = '3.6.0'
    azure_storage_version = '4.0.0'
    gson_version = '2.6.2'
    http_client_version = '4.5.2'
    rabbit_mq_version = '5.3.0'
    fst_version = '2.52'
    junit_version = '4.12'
    mockito_kotlin_version = '1.5.0'
    jedis_version = '2.9.0'
    big_math_version = '2.0.0'
}

dependencies {
    // internal libs
    compile "org.bitbucket.lykke:kotlin-utils:$kotlin_utils_version"

    // external libs
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    compile "log4j:log4j:$log4j_version"
    compile "com.google.protobuf:protobuf-java:$protobuf_version"
    compile "com.microsoft.azure:azure-storage:$azure_storage_version"
    compile "com.google.code.gson:gson:$gson_version"
    compile "org.apache.httpcomponents:httpclient:$http_client_version"
    compile "com.rabbitmq:amqp-client:$rabbit_mq_version"
    compile "de.ruedigermoeller:fst:$fst_version"
    compile "redis.clients:jedis:$jedis_version"
    compile "ch.obermuhlner:big-math:$big_math_version"

    compile('org.springframework.boot:spring-boot-starter')

    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile  "junit:junit:$junit_version"
    testCompile "com.nhaarman:mockito-kotlin:$mockito_kotlin_version"
    testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
}

compileKotlin {
    kotlinOptions {
        apiVersion = "1.2"
        jvmTarget = "1.8"
    }
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:$protobuf_version"
    }

    generateProtoTasks.generatedFilesBaseDir = 'src'

    generateProtoTasks {
        ofSourceSet('main')
    }
}

task printProperties << {
    teamcity.each { key, val ->
        println "##tc-property name='${key}' value='${val}'"
    }
}

bootJar {
    if (project.hasProperty('teamcity')) {
        manifest {
            attributes 'Revision-number': teamcity['build.vcs.number'], 'Build-number': teamcity['build.number'], 'Version': version + '.' + teamcity['build.number']
        }
    } else {
        manifest {
            attributes 'Revision-number': 'localBuild', 'Build-number': 'localBuild', 'Version': version + '.000'
        }
    }
}

bootDistZip {
    archiveName "${project.name}-${project.version}.zip"
    into("${project.name}-${project.version}.zip") {
        from "${rootProject.projectDir}/src/dist"
    }
}

mainClassName = "com.lykke.matching.engine.AppStarterKt"
applicationDefaultJvmArgs = ["-Xms512m", "-Xmx1g"]
distTar.enabled = false